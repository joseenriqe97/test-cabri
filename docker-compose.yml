services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DATABASE_HOST: db
        DATABASE_USER: ${DATABASE_USER}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_DB_NAME: ${DATABASE_DB_NAME}
        AUTH_TOKEN: ${AUTH_TOKEN}
        ARG URL_PLD: ${URL_PLD}

    environment:
      - DATABASE_HOST=db
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_DB_NAME=${DATABASE_DB_NAME}
      - AUTH_TOKEN=${AUTH_TOKEN}
      - URL_PLD=${URL_PLD}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

volumes:
  db_data:
